{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c5e6a411580817d819a80ac0cfdccdef974d20135b456b42e6f87aa21a4b9087",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32",
        "version": {
          "withMetadata": "7707873603e44c2f014fc07abce1e670551202cf1dd63e6d5493a35ded7a7c5b",
          "withoutMetadata": "5361d7bc9eebc686e0379e852ebe4a632207e352687c5850ba64c3aa8ff0b2ba",
          "linkedWithoutMetadata": "5361d7bc9eebc686e0379e852ebe4a632207e352687c5850ba64c3aa8ff0b2ba"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:33"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/interfaces/IERC20.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:17",
        "version": {
          "withMetadata": "bd25aec83d817c92e0986919969347c76bf414c95a51f98660b64230c99deeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/libraries/Address.sol:8",
        "version": {
          "withMetadata": "7065817d250dde7602405f4a6bbc36dcf6d6480a862ec753f5a317ac9e4e1e73",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/maximizer/CairoMaximizer.sol:671",
        "version": {
          "withMetadata": "7702360954ed59c1531591e4ed7f814cfc19252a0e084b49a7938677fc38e688",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "5e3e886d67e6672decc9ca55d6bb1c69f08d1f9d575a5122e2d96c9fa459c532",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Timelock": {
        "src": "contracts/core/Timelock.sol:19",
        "version": {
          "withMetadata": "2ee4116addbbc9885a8dbe4df4f626caa0e9ad793c0a3fccf0ec227bc817b8f8",
          "withoutMetadata": "2ee4116addbbc9885a8dbe4df4f626caa0e9ad793c0a3fccf0ec227bc817b8f8",
          "linkedWithoutMetadata": "2ee4116addbbc9885a8dbe4df4f626caa0e9ad793c0a3fccf0ec227bc817b8f8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "setDelay(uint256)",
          "acceptAdmin()",
          "setPendingAdmin(address)",
          "queueTransaction(address,uint256,string,bytes,uint256)",
          "cancelTransaction(address,uint256,string,bytes,uint256)",
          "executeTransaction(address,uint256,string,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Timelock",
            "src": "contracts/core/Timelock.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:33"
            },
            {
              "label": "pendingAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:34"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:35"
            },
            {
              "label": "admin_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:36"
            },
            {
              "label": "queuedTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AutoCairoPool": {
        "src": "contracts/farm/AutoCairoPool.sol:33",
        "version": {
          "withMetadata": "12f539a4ebc92a4cca82f9558332e3d3da32187228d9beeda727f3b587722ddd",
          "withoutMetadata": "bfe2317d182b3a7c81c83c3110e275679009f95b19ac06e1595e1f3687fb94c1",
          "linkedWithoutMetadata": "bfe2317d182b3a7c81c83c3110e275679009f95b19ac06e1595e1f3687fb94c1"
        },
        "inherit": [
          "Pausable",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "methods": [
          "(address,address,address,address,address)",
          "deposit(uint256)",
          "withdrawAll()",
          "harvest()",
          "setAdmin(address)",
          "setTreasury(address)",
          "setPerformanceFee(uint256)",
          "setCallFee(uint256)",
          "setWithdrawFee(uint256)",
          "setWithdrawFeePeriod(uint256)",
          "emergencyWithdraw()",
          "inCaseTokensGetStuck(address)",
          "pause()",
          "unpause()",
          "calculateHarvestCakeRewards()",
          "calculateTotalPendingCakeRewards()",
          "getPricePerFullShare()",
          "withdraw(uint256)",
          "available()",
          "balanceOf()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AutoCairoPool",
            "src": "contracts/farm/AutoCairoPool.sol:89"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/farm/AutoCairoPool.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "receiptToken",
            "src": "contracts/farm/AutoCairoPool.sol:45"
          },
          {
            "kind": "state-variable-immutable",
            "name": "masterchef",
            "src": "contracts/farm/AutoCairoPool.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "performanceFee",
            "src": "contracts/farm/AutoCairoPool.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callFee",
            "src": "contracts/farm/AutoCairoPool.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "withdrawFee",
            "src": "contracts/farm/AutoCairoPool.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "withdrawFeePeriod",
            "src": "contracts/farm/AutoCairoPool.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:27"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(UserInfo)3231_storage)",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:49"
            },
            {
              "label": "totalShares",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:51"
            },
            {
              "label": "lastHarvestedTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:52"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:53"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:54"
            },
            {
              "label": "performanceFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:61"
            },
            {
              "label": "callFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:62"
            },
            {
              "label": "withdrawFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:63"
            },
            {
              "label": "withdrawFeePeriod",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:64"
            },
            {
              "label": "_methodStatus",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "AutoCairoPool",
              "src": "contracts/farm/AutoCairoPool.sol:445"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserInfo)3231_storage)": {
              "label": "mapping(address => struct AutoCairoPool.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(UserInfo)3231_storage": {
              "label": "struct AutoCairoPool.UserInfo",
              "members": [
                {
                  "label": "shares",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastDepositedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cakeAtLastUserAction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUserActionTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMasterChef": {
        "src": "contracts/farm/AutoCairoPool.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "enterStaking(uint256)",
          "leaveStaking(uint256)",
          "pendingCake(uint256,address)",
          "userInfo(uint256,address)",
          "emergencyWithdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BnbStaking": {
        "src": "contracts/farm/BnbStaking.sol:18",
        "version": {
          "withMetadata": "521a2ab9e427d008a3cc09cd5eba9add04a80e5863978c971c234804de437493",
          "withoutMetadata": "84d526fe1ae8296ebd0b8b460896adb6dc67d656d31632675a4699e8d9c77c60",
          "linkedWithoutMetadata": "84d526fe1ae8296ebd0b8b460896adb6dc67d656d31632675a4699e8d9c77c60"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "(address,address,uint256,uint256,uint256,address,address)",
          "()",
          "setAdmin(address)",
          "setBlackList(address)",
          "removeBlackList(address)",
          "setLimitAmount(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingReward(address)",
          "updatePool(uint256)",
          "massUpdatePools()",
          "deposit()",
          "withdraw(uint256)",
          "emergencyWithdraw()",
          "emergencyRewardWithdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BnbStaking",
            "src": "contracts/farm/BnbStaking.sol:67"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/farm/BnbStaking.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "limitAmount",
            "src": "contracts/farm/BnbStaking.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts/farm/BnbStaking.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBEP20)15015",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:38"
            },
            {
              "label": "adminAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:41"
            },
            {
              "label": "rewardPerBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:48"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(PoolInfo)4344_storage)dyn_storage",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:51"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(UserInfo)4334_storage)",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:53"
            },
            {
              "label": "limitAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:55"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:57"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:59"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "BnbStaking",
              "src": "contracts/farm/BnbStaking.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)4344_storage)dyn_storage": {
              "label": "struct BnbStaking.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBEP20)15015": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)4334_storage)": {
              "label": "mapping(address => struct BnbStaking.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4344_storage": {
              "label": "struct BnbStaking.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCakePerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserInfo)4334_storage": {
              "label": "struct BnbStaking.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "inBlackList",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IWBNB": {
        "src": "contracts/farm/BnbStaking.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HoldStake": {
        "src": "contracts/farm/HoldStake.sol:12",
        "version": {
          "withMetadata": "b666fd364456b5188f95d8edfb30a66656a4ded2344e2b4f70a824fd55fd6a4d",
          "withoutMetadata": "d98c72d2087594f1a6ae8bff5cc764d9e6a8ed3deae9d9fbca45f80e4432d60f",
          "linkedWithoutMetadata": "d98c72d2087594f1a6ae8bff5cc764d9e6a8ed3deae9d9fbca45f80e4432d60f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "addPool(address,uint256,uint256,uint256)",
          "injectInterest(uint256)",
          "deposit(uint256,uint256,uint256)",
          "harvest(uint256)",
          "withdraw(uint256)",
          "holdInProgress()",
          "holdInFinished()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HoldStake",
            "src": "contracts/farm/HoldStake.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "finalCompleTime",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:35"
            },
            {
              "label": "interestHardcap",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:37"
            },
            {
              "label": "interestProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:38"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:40"
            },
            {
              "label": "holdPools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(HoldPool)5175_storage)",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:41"
            },
            {
              "label": "depositInfos",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(DepositInfo)5188_storage))",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:42"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "HoldStake",
              "src": "contracts/farm/HoldStake.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)1303": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(DepositInfo)5188_storage))": {
              "label": "mapping(address => mapping(uint256 => struct HoldStake.DepositInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(DepositInfo)5188_storage)": {
              "label": "mapping(uint256 => struct HoldStake.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(HoldPool)5175_storage)": {
              "label": "mapping(uint256 => struct HoldStake.HoldPool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)5188_storage": {
              "label": "struct HoldStake.DepositInfo",
              "members": [
                {
                  "label": "pid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "earned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "present",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(HoldPool)5175_storage": {
              "label": "struct HoldStake.HoldPool",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC20)1303",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hardcap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "preUserHardcap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "apy",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "interest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "finishTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ILO": {
        "src": "contracts/farm/ILO.sol:17",
        "version": {
          "withMetadata": "49752ede59cb8dcc67e34c3e30f527ff1842ae07a14482fedbe9d34e81f376f0",
          "withoutMetadata": "c706c469866fae72bbb45af2dad75ac54162adeea6c42a59c03f0cc77e82be1f",
          "linkedWithoutMetadata": "c706c469866fae72bbb45af2dad75ac54162adeea6c42a59c03f0cc77e82be1f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "setStartBlock(uint256)",
          "setEndBlock(uint256)",
          "(address,uint256,uint256)",
          "poolLength()",
          "add(uint256,address)",
          "pendingCairo(uint256,address)",
          "deposit(uint256,uint256)",
          "withdraw(uint256)",
          "ownerWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ILO",
            "src": "contracts/farm/ILO.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts/farm/ILO.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "cake",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBEP20)15015",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:31"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PoolInfo)6157_storage)dyn_storage",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:33"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)6149_storage))",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:34"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:35"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:36"
            },
            {
              "label": "endBlock",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ILO",
              "src": "contracts/farm/ILO.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)6157_storage)dyn_storage": {
              "label": "struct ILO.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)15015": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)6149_storage)": {
              "label": "mapping(address => struct ILO.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)6149_storage))": {
              "label": "mapping(uint256 => mapping(address => struct ILO.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)6157_storage": {
              "label": "struct ILO.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(UserInfo)6149_storage": {
              "label": "struct ILO.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMigratorChef": {
        "src": "contracts/farm/MasterChef.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MasterChef": {
        "src": "contracts/farm/MasterChef.sol:35",
        "version": {
          "withMetadata": "0d9bd7ca6ee0850c7cf9c8ea68c0e3d610e11238d619b4dc32d75bb59036f6a3",
          "withoutMetadata": "460a5caaf99cca85b76ffaa1813b935b00280ee778147958161b2dfc1392815a",
          "linkedWithoutMetadata": "460a5caaf99cca85b76ffaa1813b935b00280ee778147958161b2dfc1392815a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "(address,address,uint256,uint256)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingCake(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "enterStaking(uint256)",
          "leaveStaking(uint256)",
          "emergencyWithdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterChef",
            "src": "contracts/farm/MasterChef.sol:88"
          },
          {
            "kind": "state-variable-assignment",
            "name": "BONUS_MULTIPLIER",
            "src": "contracts/farm/MasterChef.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts/farm/MasterChef.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "cake",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBEP20)15015",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:65"
            },
            {
              "label": "syrup",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SyrupBar)12669",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:67"
            },
            {
              "label": "cakePerBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:69"
            },
            {
              "label": "BONUS_MULTIPLIER",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:71"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IMigratorChef)6659",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:73"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_struct(PoolInfo)6683_storage)dyn_storage",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:76"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)6673_storage))",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:78"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:80"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "MasterChef",
              "src": "contracts/farm/MasterChef.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)6683_storage)dyn_storage": {
              "label": "struct MasterChef.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)15015": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_contract(IMigratorChef)6659": {
              "label": "contract IMigratorChef",
              "numberOfBytes": "20"
            },
            "t_contract(SyrupBar)12669": {
              "label": "contract SyrupBar",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)6673_storage)": {
              "label": "mapping(address => struct MasterChef.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)6673_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)6683_storage": {
              "label": "struct MasterChef.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCakePerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserInfo)6673_storage": {
              "label": "struct MasterChef.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MasterChefTimelock": {
        "src": "contracts/farm/MasterChefTimelock.sol:10",
        "version": {
          "withMetadata": "e839f72452b9826536ca3fd2384678ca2328624529808a139afd57a29c6d399b",
          "withoutMetadata": "e839f72452b9826536ca3fd2384678ca2328624529808a139afd57a29c6d399b",
          "linkedWithoutMetadata": "e839f72452b9826536ca3fd2384678ca2328624529808a139afd57a29c6d399b"
        },
        "inherit": [
          "Timelock"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint256)",
          "excludedPidUpdate(uint256)",
          "includePidUpdate(uint256)",
          "addExistsPools(address,uint256)",
          "delExistsPools(address)",
          "updateMultiplier(uint256)",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "massUpdatePools()",
          "setMigrator(address)",
          "executeSetMigrator()",
          "transferCairoTokenOwnerShip(address)",
          "executeTransferCairoOwnership()",
          "transferSyrupTokenOwnerShip(address)",
          "executeTransferSyrupOwnership()",
          "transferOwnership(address)",
          "executeTransferOwnership()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterChefTimelock",
            "src": "contracts/farm/MasterChefTimelock.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:33"
            },
            {
              "label": "pendingAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:34"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:35"
            },
            {
              "label": "admin_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:36"
            },
            {
              "label": "queuedTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Timelock",
              "src": "contracts/core/Timelock.sol:38"
            },
            {
              "label": "existsPools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:12"
            },
            {
              "label": "pidOfPool",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:13"
            },
            {
              "label": "isExcludedPidUpdate",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:14"
            },
            {
              "label": "masterChef",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(MasterChef)7870",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:15"
            },
            {
              "label": "setMigratorData",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(SetMigratorData)7900_storage",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:22"
            },
            {
              "label": "transferOwnershipData",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(TransferOwnershipData)7910_storage",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:29"
            },
            {
              "label": "transferCairoTokenOwnerShipData",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(TransferCairoTokenOwnershipData)7920_storage",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:36"
            },
            {
              "label": "transferSyrupTokenOwnerShipData",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(TransferSyrupTokenOwnershipData)7930_storage",
              "contract": "MasterChefTimelock",
              "src": "contracts/farm/MasterChefTimelock.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(MasterChef)7870": {
              "label": "contract MasterChef",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(SetMigratorData)7900_storage": {
              "label": "struct MasterChefTimelock.SetMigratorData",
              "members": [
                {
                  "label": "migrator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TransferCairoTokenOwnershipData)7920_storage": {
              "label": "struct MasterChefTimelock.TransferCairoTokenOwnershipData",
              "members": [
                {
                  "label": "newOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TransferOwnershipData)7910_storage": {
              "label": "struct MasterChefTimelock.TransferOwnershipData",
              "members": [
                {
                  "label": "newOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TransferSyrupTokenOwnershipData)7930_storage": {
              "label": "struct MasterChefTimelock.TransferSyrupTokenOwnershipData",
              "members": [
                {
                  "label": "newOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CairoOracleLibrary": {
        "src": "contracts/farm/Oracle.sol:66",
        "version": {
          "withMetadata": "afe3bb8dd23bacfa06f261f8af00e547368c8b435497949dcb248217c2307bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPoint": {
        "src": "contracts/farm/Oracle.sol:9",
        "version": {
          "withMetadata": "f3d35428ddb27215d39fa22970938b9194e75247970c0cf9c3ca68d035799106",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Oracle": {
        "src": "contracts/farm/Oracle.sol:96",
        "version": {
          "withMetadata": "9bb5813adb2c02643a1fc3cc00405840a9e10d10a9e3deb8878dc1e8e4947b07",
          "withoutMetadata": "21ba1e603648df157fd73b25ec7bd5f84c9f59a56b28803cbdaf1aea0cf6e747",
          "linkedWithoutMetadata": "21ba1e603648df157fd73b25ec7bd5f84c9f59a56b28803cbdaf1aea0cf6e747"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint",
          "SafeMath",
          "CairoOracleLibrary",
          "CairoLibrary"
        ],
        "methods": [
          "(address)",
          "update(address,address)",
          "consult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts/farm/Oracle.sol:112"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/farm/Oracle.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pairObservations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(Observation)9059_storage)",
              "contract": "Oracle",
              "src": "contracts/farm/Oracle.sol:110"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Observation)9059_storage)": {
              "label": "mapping(address => struct Oracle.Observation)",
              "numberOfBytes": "32"
            },
            "t_struct(Observation)9059_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price0Cumulative",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price1Cumulative",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pyramid": {
        "src": "contracts/farm/Pyramid.sol:13",
        "version": {
          "withMetadata": "c281a6bb90654c4641ffff14b3d0db8132182fcee6eeb66680e7416179e8cc87",
          "withoutMetadata": "c8a01878a9309b8d15e8457941e70142d749d5287291d7a93b8c55dde81fd24a",
          "linkedWithoutMetadata": "c8a01878a9309b8d15e8457941e70142d749d5287291d7a93b8c55dde81fd24a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "createPool()",
          "(address,address,uint256)",
          "deposit(uint256,address,uint256)",
          "withdraw(uint256,address)",
          "claim(uint256,address,address)",
          "claimAll(uint256,address,address[])",
          "pending(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pyramid",
            "src": "contracts/farm/Pyramid.sol:93"
          },
          {
            "kind": "state-variable-immutable",
            "name": "masterChef",
            "src": "contracts/farm/Pyramid.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "cairoToken",
            "src": "contracts/farm/Pyramid.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beginAt",
            "src": "contracts/farm/Pyramid.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalShares",
            "src": "contracts/farm/Pyramid.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "accCairoPerShare",
            "src": "contracts/farm/Pyramid.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            },
            {
              "label": "totalShares",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:30"
            },
            {
              "label": "accCairoPerShare",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:31"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(PoolInfo)9399_storage)",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:68"
            },
            {
              "label": "currentVoteId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:69"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)9671_storage)))",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:121"
            },
            {
              "label": "getVotes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "Pyramid",
              "src": "contracts/farm/Pyramid.sol:123"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)9671_storage))": {
              "label": "mapping(address => mapping(address => struct Pyramid.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)9671_storage)": {
              "label": "mapping(address => struct Pyramid.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)9671_storage)))": {
              "label": "mapping(uint256 => mapping(address => mapping(address => struct Pyramid.UserInfo)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PoolInfo)9399_storage)": {
              "label": "mapping(uint256 => struct Pyramid.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)9399_storage": {
              "label": "struct Pyramid.PoolInfo",
              "members": [
                {
                  "label": "avaliable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unlockAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "finishAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(UserInfo)9671_storage": {
              "label": "struct Pyramid.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pending",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/farm/SwapMining.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "update(address,address)",
          "consult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SwapMining": {
        "src": "contracts/farm/SwapMining.sol:21",
        "version": {
          "withMetadata": "964d3dd1c67f906d01397f50b6944d61e636eadfa8a9242da2bf312f00c2f467",
          "withoutMetadata": "bfc3e66576a5ce9a18c25a06106300ae04e926b63365f6214baccfd0f07dc0ad",
          "linkedWithoutMetadata": "bfc3e66576a5ce9a18c25a06106300ae04e926b63365f6214baccfd0f07dc0ad"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "EnumerableSet",
          "CairoLibrary",
          "console"
        ],
        "methods": [
          "(address,address,address,address,address,uint256,uint256)",
          "poolLength()",
          "addPair(uint256,address,bool)",
          "setPair(uint256,uint256,bool)",
          "setCairoPerBlock(uint256)",
          "addWhitelist(address)",
          "delWhitelist(address)",
          "getWhitelistLength()",
          "isWhitelist(address)",
          "getWhitelist(uint256)",
          "setHalvingPeriod(uint256)",
          "setRouter(address)",
          "setOracle(address)",
          "phase(uint256)",
          "phase()",
          "reward(uint256)",
          "reward()",
          "getCairoReward(uint256)",
          "massMintPools()",
          "mint(uint256)",
          "swap(address,address,address,uint256)",
          "getQuantity(address,uint256,address)",
          "takerWithdraw()",
          "getUserReward(uint256,address)",
          "getPoolInfo(uint256)",
          "ownerWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapMining",
            "src": "contracts/farm/SwapMining.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "halvingPeriod",
            "src": "contracts/farm/SwapMining.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts/farm/SwapMining.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2446_storage",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:24"
            },
            {
              "label": "cairoPerBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:27"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:29"
            },
            {
              "label": "halvingPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:31"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:33"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IOracle)10565",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:34"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:36"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ICairoFactory)15219",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:38"
            },
            {
              "label": "cairoToken",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(CairoToken)28513",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:40"
            },
            {
              "label": "targetToken",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:42"
            },
            {
              "label": "pairOfPid",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:44"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(PoolInfo)10720_storage)dyn_storage",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:82"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10707_storage))",
              "contract": "SwapMining",
              "src": "contracts/farm/SwapMining.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(PoolInfo)10720_storage)dyn_storage": {
              "label": "struct SwapMining.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(CairoToken)28513": {
              "label": "contract CairoToken",
              "numberOfBytes": "20"
            },
            "t_contract(ICairoFactory)15219": {
              "label": "contract ICairoFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)10565": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)10707_storage)": {
              "label": "mapping(address => struct SwapMining.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10707_storage))": {
              "label": "mapping(uint256 => mapping(address => struct SwapMining.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2446_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2169_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolInfo)10720_storage": {
              "label": "struct SwapMining.PoolInfo",
              "members": [
                {
                  "label": "pair",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalQuantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "allocMdxAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Set)2169_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)10707_storage": {
              "label": "struct SwapMining.UserInfo",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SyrupBar": {
        "src": "contracts/farm/SyrupBar.sol:8",
        "version": {
          "withMetadata": "63babd486b05e54f3677fa6be8f20121573e88523b5ae21ba710d65d48d32d6e",
          "withoutMetadata": "3ad2a9b10cd18c7b36c6e964224ab2245a33c1f184b3fe5792156b599e52b5a5",
          "linkedWithoutMetadata": "3ad2a9b10cd18c7b36c6e964224ab2245a33c1f184b3fe5792156b599e52b5a5"
        },
        "inherit": [
          "BEP20",
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "(address)",
          "safeCakeTransfer(address,uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SyrupBar",
            "src": "contracts/farm/SyrupBar.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:47"
            },
            {
              "label": "cake",
              "offset": 1,
              "slot": "6",
              "type": "t_contract(BEP20)27194",
              "contract": "SyrupBar",
              "src": "contracts/farm/SyrupBar.sol:22"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "SyrupBar",
              "src": "contracts/farm/SyrupBar.sol:47"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)12074_storage))",
              "contract": "SyrupBar",
              "src": "contracts/farm/SyrupBar.sol:56"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "SyrupBar",
              "src": "contracts/farm/SyrupBar.sol:59"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SyrupBar",
              "src": "contracts/farm/SyrupBar.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(BEP20)27194": {
              "label": "contract BEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)12074_storage))": {
              "label": "mapping(address => mapping(uint32 => struct SyrupBar.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)12074_storage)": {
              "label": "mapping(uint32 => struct SyrupBar.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)12074_storage": {
              "label": "struct SyrupBar.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDO": {
        "src": "contracts/ido/IDO.sol:135",
        "version": {
          "withMetadata": "7cff4b80cc939c503ec8fa564f0a41eda8ad391acb4dd514d7ca067fb9b508f9",
          "withoutMetadata": "b6d98de7217c8b83cf607dd8cbcdd504624a8ac6de70a598e4426993bc6c9b70",
          "linkedWithoutMetadata": "b6d98de7217c8b83cf607dd8cbcdd504624a8ac6de70a598e4426993bc6c9b70"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "createIDO(address,address,uint256,uint256,uint256,uint256,uint256)",
          "removeIDO()",
          "chargeIDO(uint256)",
          "stake(uint256)",
          "available(address,uint256)",
          "userPayValue(uint256,address)",
          "isWithdraw(uint256,address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "IDOIssue",
            "src": "contracts/ido/IDO.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "IDOIssue",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "IDO",
              "src": "contracts/ido/IDO.sol:157"
            },
            {
              "label": "IDODB",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(IDORecord)12927_storage)",
              "contract": "IDO",
              "src": "contracts/ido/IDO.sol:158"
            },
            {
              "label": "isCharge",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "IDO",
              "src": "contracts/ido/IDO.sol:159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBEP20)15015": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(IDORecord)12927_storage)": {
              "label": "mapping(uint256 => struct IDO.IDORecord)",
              "numberOfBytes": "32"
            },
            "t_struct(IDORecord)12927_storage": {
              "label": "struct IDO.IDORecord",
              "members": [
                {
                  "label": "issue",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "idoToken",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "receiveToken",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "idoTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "receivedTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "payAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts/token/SafeBEP20.sol:18",
        "version": {
          "withMetadata": "9f94104de2e20ded74b505b4c28d3ecf9c3289099e2ea12aedda55c01e6d248f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFO": {
        "src": "contracts/ido/IFO.sol:135",
        "version": {
          "withMetadata": "e4c48d417239dc936e04aafc1f22a31abb14dcbf56f56290d35077e021d35ff4",
          "withoutMetadata": "87878fb0db439db227245ec792abd5c27019ddb878aafadb26559cc2641f9b81",
          "linkedWithoutMetadata": "87878fb0db439db227245ec792abd5c27019ddb878aafadb26559cc2641f9b81"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "launch(address,address,address,uint256,uint256,uint256,uint256,uint256)",
          "removeIFO()",
          "withdraw(uint256)",
          "stake(uint256)",
          "available(address,uint256)",
          "userPayValue(uint256,address)",
          "isCollected(uint256,address)",
          "collect(uint256)",
          "getFeeRate(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idIncrement",
            "src": "contracts/ido/IFO.sol:155"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "idIncrement",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "IFO",
              "src": "contracts/ido/IFO.sol:155"
            },
            {
              "label": "ifoInfos",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(IFOInfo)13944_storage)",
              "contract": "IFO",
              "src": "contracts/ido/IFO.sol:156"
            },
            {
              "label": "isWithdraw",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "IFO",
              "src": "contracts/ido/IFO.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBEP20)15015": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(IFOInfo)13944_storage)": {
              "label": "mapping(uint256 => struct IFO.IFOInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(IFOInfo)13944_storage": {
              "label": "struct IFO.IFOInfo",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exhibits",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IBEP20)15015",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "hardcap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "incomeTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "payAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "isCollected",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "12"
                }
              ],
              "numberOfBytes": "416"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoBEP20": {
        "src": "contracts/interfaces/ICairoBEP20.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoCallee": {
        "src": "contracts/interfaces/ICairoCallee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cairoCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoFactory": {
        "src": "contracts/interfaces/ICairoFactory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "expectPairFor(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoPair": {
        "src": "contracts/interfaces/ICairoPair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoRouter": {
        "src": "contracts/interfaces/ICairoToken.sol:7",
        "inherit": [
          "IBEP20"
        ],
        "libraries": [],
        "methods": [
          "transferFromCairoNetwork(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoRouter01": {
        "src": "contracts/interfaces/ICairoRouter01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICairoRouter02": {
        "src": "contracts/interfaces/ICairoRouter02.sol:7",
        "inherit": [
          "ICairoRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/interfaces/IWETH.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CairoLibrary": {
        "src": "contracts/libraries/CairoLibrary.sol:9",
        "version": {
          "withMetadata": "63dd33de09493be12f5a81c9cfa335832dc49552010393bdcb64ea8474f2ed0e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/libraries/DecimalMath.sol:22",
        "version": {
          "withMetadata": "c2d1435531982b54b5a206dd325c1fe3c6ed3e489cbbcee1e52d87a5d23493e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "MySafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MySafeMath": {
        "src": "contracts/libraries/DecimalMath.sol:8",
        "version": {
          "withMetadata": "8cf65b8304b597c020e670a6c1111c133c6f593bad002ee962e7a0a01eac342d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:7",
        "version": {
          "withMetadata": "2f7e9f92c8b31732b12060c0bb4357ed0c6dc9812a3f8a678890fc2df37e9edf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "22989876f737c3e4ab7e74ddedb93977bf6bb696779091d8a7c5da1293907472",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts/libraries/UQ112x112.sol:10",
        "version": {
          "withMetadata": "0f36b0430f1681deb287a8d2c72505fc9473cf632a50e1717eb36dc132fd8219",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CairoMaximizerV1": {
        "src": "contracts/maximizer/CairoMaximizer.sol:47",
        "version": {
          "withMetadata": "d1aff20e2e1667382c9e8c54fd32c72a5ce1029e07572840c06262ad39d33f20",
          "withoutMetadata": "73a946ced2092fda46a43266750cb757b34d3086dc5e08f96dc194e6e99e81ba",
          "linkedWithoutMetadata": "73a946ced2092fda46a43266750cb757b34d3086dc5e08f96dc194e6e99e81ba"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "()",
          "updatePayoutRate(uint256)",
          "updateRefDepth(uint256)",
          "updateRefBonus(uint256)",
          "updateInitialDeposit(uint256)",
          "updateCompoundTax(uint256)",
          "updateExitTax(uint256)",
          "updateDepositBracketSize(uint256)",
          "updateMaxPayoutCap(uint256)",
          "updateHoldRequirements(uint256[])",
          "checkin()",
          "deposit(address,uint256)",
          "claim()",
          "roll()",
          "isNetPositive(address)",
          "creditsAndDebits(address)",
          "isBalanceCovered(address,uint8)",
          "balanceLevel(address)",
          "getCustody(address)",
          "lastActivity(address)",
          "claimsAvailable(address)",
          "maxPayoutOf(uint256)",
          "sustainabilityFeeV2(address,uint256)",
          "payoutOf(address)",
          "userInfo(address)",
          "userInfoTotals(address)",
          "contractInfo()",
          "airdrop(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "cairoVaultAddress",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:90"
            },
            {
              "label": "tokenMint",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(ITokenMint)18007",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:92"
            },
            {
              "label": "br34pToken",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IToken)17985",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:93"
            },
            {
              "label": "cairoToken",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IToken)17985",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:94"
            },
            {
              "label": "cairoVault",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(ICairoVault)18013",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:95"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_struct(User)18041_storage)",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:97"
            },
            {
              "label": "airdrops",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_struct(Airdrop)18048_storage)",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:98"
            },
            {
              "label": "custody",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(Custody)18059_storage)",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:99"
            },
            {
              "label": "CompoundTax",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:101"
            },
            {
              "label": "ExitTax",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:102"
            },
            {
              "label": "payoutRate",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:104"
            },
            {
              "label": "ref_depth",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:105"
            },
            {
              "label": "ref_bonus",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:106"
            },
            {
              "label": "minimumInitial",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:108"
            },
            {
              "label": "minimumAmount",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:109"
            },
            {
              "label": "deposit_bracket_size",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:111"
            },
            {
              "label": "max_payout_cap",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:112"
            },
            {
              "label": "deposit_bracket_max",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:113"
            },
            {
              "label": "ref_balances",
              "offset": 0,
              "slot": "119",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:115"
            },
            {
              "label": "total_airdrops",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:117"
            },
            {
              "label": "total_users",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:118"
            },
            {
              "label": "total_deposited",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:119"
            },
            {
              "label": "total_withdraw",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:120"
            },
            {
              "label": "total_bnb",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:121"
            },
            {
              "label": "total_txs",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "CairoMaximizerV1",
              "src": "contracts/maximizer/CairoMaximizer.sol:122"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICairoVault)18013": {
              "label": "contract ICairoVault",
              "numberOfBytes": "20"
            },
            "t_contract(IToken)17985": {
              "label": "contract IToken",
              "numberOfBytes": "20"
            },
            "t_contract(ITokenMint)18007": {
              "label": "contract ITokenMint",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Airdrop)18048_storage)": {
              "label": "mapping(address => struct CairoMaximizerV1.Airdrop)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Custody)18059_storage)": {
              "label": "mapping(address => struct CairoMaximizerV1.Custody)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)18041_storage)": {
              "label": "mapping(address => struct CairoMaximizerV1.User)",
              "numberOfBytes": "32"
            },
            "t_struct(Airdrop)18048_storage": {
              "label": "struct CairoMaximizerV1.Airdrop",
              "members": [
                {
                  "label": "airdrops",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "airdrops_received",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "last_airdrop",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Custody)18059_storage": {
              "label": "struct CairoMaximizerV1.Custody",
              "members": [
                {
                  "label": "manager",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "last_heartbeat",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "last_checkin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "heartbeat_interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(User)18041_storage": {
              "label": "struct CairoMaximizerV1.User",
              "members": [
                {
                  "label": "upline",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "total_structure",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "direct_bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "match_bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "deposits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "deposit_time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "payouts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "rolls",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "ref_claim_pos",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "accumulatedDiv",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICairoVault": {
        "src": "contracts/maximizer/CairoMaximizer.sol:41",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IToken": {
        "src": "contracts/maximizer/CairoMaximizer.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "remainingMintableSupply()",
          "calculateTransferTaxes(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "mintedSupply()",
          "allowance(address,address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITokenMint": {
        "src": "contracts/maximizer/CairoMaximizer.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "estimateMint(uint256)",
          "remainingMintableSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockToken": {
        "src": "contracts/mock/MockToken.sol:10",
        "version": {
          "withMetadata": "3639062f3daeae9056d4aacbfc665d659bfa17e348f1f6d9300215cbb40a1eac",
          "withoutMetadata": "7cb8441e04140dacfc42fa14f7c9efd950261fb7f77e72b8c30fa31e7f39e9e7",
          "linkedWithoutMetadata": "7cb8441e04140dacfc42fa14f7c9efd950261fb7f77e72b8c30fa31e7f39e9e7"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:33"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CairoRouter": {
        "src": "contracts/router/CairoRouter02.sol:20",
        "version": {
          "withMetadata": "9cda21859a4a19a42e023542fe335f07a7953fa327a48031b788eb5dae026b51",
          "withoutMetadata": "43a9070c2019c815b5d5c519a42ae70b6998f7dc01864c88df217cc659b08646",
          "linkedWithoutMetadata": "43a9070c2019c815b5d5c519a42ae70b6998f7dc01864c88df217cc659b08646"
        },
        "inherit": [
          "Ownable",
          "Context",
          "ICairoRouter02",
          "ICairoRouter01"
        ],
        "libraries": [
          "SafeMath",
          "CairoLibrary",
          "TransferHelper"
        ],
        "methods": [
          "setSwapMining(address)",
          "(address,address,uint256,address)",
          "setFactoryAndFee(uint256,address,uint256)",
          "delFactoryAndFee(uint256)",
          "setTokenMinAmount(address,uint256)",
          "()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CairoRouter",
            "src": "contracts/router/CairoRouter02.sol:41"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:90"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:123"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:138"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:155"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:171"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:188"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/router/CairoRouter02.sol:204"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/router/CairoRouter02.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oldRouter",
            "src": "contracts/router/CairoRouter02.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/router/CairoRouter02.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "factories",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CairoRouter",
              "src": "contracts/router/CairoRouter02.sol:24"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CairoRouter",
              "src": "contracts/router/CairoRouter02.sol:25"
            },
            {
              "label": "tokenMinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoRouter",
              "src": "contracts/router/CairoRouter02.sol:26"
            },
            {
              "label": "swapMining",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CairoRouter",
              "src": "contracts/router/CairoRouter02.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISwapMining": {
        "src": "contracts/router/CairoRouter02.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CairoFactory": {
        "src": "contracts/swap/CairoFactory.sol:8",
        "version": {
          "withMetadata": "114f88ff04d1709e0a9fc49a19f03c64a857cb35050b680a6175f4f5d52e202c",
          "withoutMetadata": "7b1ab33ff8e99d1139ed8a9f758c656913c3c8f5274f1e1fb5b1d472e24ee922",
          "linkedWithoutMetadata": "7b1ab33ff8e99d1139ed8a9f758c656913c3c8f5274f1e1fb5b1d472e24ee922"
        },
        "inherit": [],
        "libraries": [
          "CairoLibrary"
        ],
        "methods": [
          "(address)",
          "allPairsLength()",
          "expectPairFor(address,address)",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CairoFactory",
            "src": "contracts/swap/CairoFactory.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CairoFactory",
              "src": "contracts/swap/CairoFactory.sol:11"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CairoFactory",
              "src": "contracts/swap/CairoFactory.sol:12"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CairoFactory",
              "src": "contracts/swap/CairoFactory.sol:14"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CairoFactory",
              "src": "contracts/swap/CairoFactory.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CairoFinanceFee": {
        "src": "contracts/swap/CairoFinanceFee.sol:16",
        "version": {
          "withMetadata": "5379812bb5f94c517875eefd7901541ac17981d642b804b8674bcd9cd0354e71",
          "withoutMetadata": "8b76614e44c770be185b625665f103512760c609e0de3faad395526031757bec",
          "linkedWithoutMetadata": "8b76614e44c770be185b625665f103512760c609e0de3faad395526031757bec"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address",
          "SafeBEP20"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "setCaller(address)",
          "doHardwork(address[],uint256)",
          "destroyAll()",
          "transferOut(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CairoFinanceFee",
            "src": "contracts/swap/CairoFinanceFee.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "Pyramid",
            "src": "contracts/swap/CairoFinanceFee.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vault",
            "src": "contracts/swap/CairoFinanceFee.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "router",
            "src": "contracts/swap/CairoFinanceFee.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/swap/CairoFinanceFee.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/swap/CairoFinanceFee.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "CAIRO",
            "src": "contracts/swap/CairoFinanceFee.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT",
            "src": "contracts/swap/CairoFinanceFee.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "receiver",
            "src": "contracts/swap/CairoFinanceFee.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "caller",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CairoFinanceFee",
              "src": "contracts/swap/CairoFinanceFee.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CairoPair": {
        "src": "contracts/swap/CairoPair.sol:13",
        "version": {
          "withMetadata": "cdfff2634f2494433425e1f5e09182963e521ab7b39c8cb6d08c1aa46942c194",
          "withoutMetadata": "e862a494d6510005a9831e8571bf1ec8d454dbf872fe81bdd24bb54ec92c25cd",
          "linkedWithoutMetadata": "e862a494d6510005a9831e8571bf1ec8d454dbf872fe81bdd24bb54ec92c25cd"
        },
        "inherit": [
          "CairoBEP20",
          "ICairoBEP20"
        ],
        "libraries": [
          "SafeMath",
          "UQ112x112",
          "Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CairoPair",
            "src": "contracts/swap/CairoPair.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts/swap/CairoPair.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:14"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:15"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:16"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:18"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:21"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:20"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:21"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:22"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:24"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:25"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:26"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:28"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:29"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:30"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CairoPair",
              "src": "contracts/swap/CairoPair.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BEP20": {
        "src": "contracts/token/BEP20.sol:35",
        "version": {
          "withMetadata": "3cdd324426147fa2fa19df78ea1583e2712b85d4bbbd22a5588f97c027e9b805",
          "withoutMetadata": "9f20a422ba3ab1d4e9da7f1bf5413c373f67988ffee0f3f4562420b246d05634",
          "linkedWithoutMetadata": "9f20a422ba3ab1d4e9da7f1bf5413c373f67988ffee0f3f4562420b246d05634"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "(string,string)",
          "getOwner()",
          "name()",
          "decimals()",
          "symbol()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BEP20",
            "src": "contracts/token/BEP20.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "BEP20",
              "src": "contracts/token/BEP20.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CairoBEP20": {
        "src": "contracts/token/CairoBEP20.sol:8",
        "version": {
          "withMetadata": "33a1547b755ab75576e754588d550ba52f157f6ccf4fcabe33e805d9e0504d6c",
          "withoutMetadata": "04fd904cc3e1b1316cd0bece8d524dd975a84e8ba154e6f0a87f1050d43222e2",
          "linkedWithoutMetadata": "04fd904cc3e1b1316cd0bece8d524dd975a84e8ba154e6f0a87f1050d43222e2"
        },
        "inherit": [
          "ICairoBEP20"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CairoBEP20",
            "src": "contracts/token/CairoBEP20.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:14"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:15"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:16"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:18"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoBEP20",
              "src": "contracts/token/CairoBEP20.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ApproveAndCallFallBack": {
        "src": "contracts/token/CairoToken.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveApproval(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CairoToken": {
        "src": "contracts/token/CairoToken.sol:61",
        "version": {
          "withMetadata": "93607f09f384db4a7bbf703f64d2676dcfda5c5961289922cf5b3e9fd34c17aa",
          "withoutMetadata": "bfc3235121ab60a545d8c86a44e1c26930e2c4fa03763b5388c77409e3f0c056",
          "linkedWithoutMetadata": "bfc3235121ab60a545d8c86a44e1c26930e2c4fa03763b5388c77409e3f0c056"
        },
        "inherit": [
          "IBEP20",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Roles"
        ],
        "methods": [
          "initialize(address)",
          "renounceOwnership()",
          "transferOwnership(address)",
          "mintable()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "approveAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "burn(uint256)",
          "mint(uint256)",
          "removeNetworkContract(address)",
          "addNetworkContract(address)",
          "burnFromCairoNetwork(address,uint256)",
          "transferFromCairoNetwork(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:65"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:66"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:67"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:68"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:69"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "56",
              "type": "t_uint8",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:70"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "56",
              "type": "t_address",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:72"
            },
            {
              "label": "_mintable",
              "offset": 21,
              "slot": "56",
              "type": "t_bool",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:75"
            },
            {
              "label": "networkContracts",
              "offset": 0,
              "slot": "57",
              "type": "t_struct(Role)27604_storage",
              "contract": "CairoToken",
              "src": "contracts/token/CairoToken.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Role)27604_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts/token/CairoToken.sol:21",
        "version": {
          "withMetadata": "75b9e8e1fea52a730468a09d0881d6d0b98ee9e5603d83d4c6a1488bea167115",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TokenLocker": {
        "src": "contracts/token/TokenLocker.sol:10",
        "version": {
          "withMetadata": "865a978ecf0115d01f91df1c80a5a4878d9afde7236e4b43d40df983e6b9e47e",
          "withoutMetadata": "8c7601560ba90cec10ac69fd01a9963b322d0d3955556400d21ccef954a79d57",
          "linkedWithoutMetadata": "8c7601560ba90cec10ac69fd01a9963b322d0d3955556400d21ccef954a79d57"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "(address,address,uint256,uint256)",
          "claim()",
          "lockInfo()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/token/TokenLocker.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/token/TokenLocker.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "receiver",
            "src": "contracts/token/TokenLocker.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "interval",
            "src": "contracts/token/TokenLocker.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "releaseAmount",
            "src": "contracts/token/TokenLocker.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastReleaseAt",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TokenLocker",
              "src": "contracts/token/TokenLocker.sol:23"
            },
            {
              "label": "totalReleasedAmount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TokenLocker",
              "src": "contracts/token/TokenLocker.sol:32"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "vCAIROToken": {
        "src": "contracts/token/VCairoToken.sol:12",
        "version": {
          "withMetadata": "5df3781cdc0777b2297ad1802ba4f02aeededdd3b8e87b8c92a878522ccedf55",
          "withoutMetadata": "211fdf58670ccbf38a84f6daa6ec7fa1d22c18c34e6935c473ac69920e9f10e0",
          "linkedWithoutMetadata": "211fdf58670ccbf38a84f6daa6ec7fa1d22c18c34e6935c473ac69920e9f10e0"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "DecimalMath"
        ],
        "methods": [
          "(address,address,address,address)",
          "setCanTransfer(bool)",
          "changePerReward(uint256)",
          "updateCAIROFeeBurnRatio(uint256)",
          "updateCAIROFeeReserveRatio(uint256)",
          "updateTeamAddress(address)",
          "updateTreasuryAddress(address)",
          "updateReserveAddress(address)",
          "setSuperiorMinCAIRO(uint256)",
          "emergencyWithdraw()",
          "mint(uint256,address)",
          "redeem(uint256,bool)",
          "donate(uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "getLatestAlpha()",
          "availableBalanceOf(address)",
          "cairoBalanceOf(address)",
          "getWithdrawResult(uint256)",
          "setRatioValue(uint256)",
          "getSuperior(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "vCAIROToken",
            "src": "contracts/token/VCairoToken.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token/VCairoToken.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token/VCairoToken.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/token/VCairoToken.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_cairoFeeBurnRatio",
            "src": "contracts/token/VCairoToken.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_cairoFeeReserveRatio",
            "src": "contracts/token/VCairoToken.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeRatio",
            "src": "contracts/token/VCairoToken.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alpha",
            "src": "contracts/token/VCairoToken.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_superiorMinCAIRO",
            "src": "contracts/token/VCairoToken.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:19"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:20"
            },
            {
              "label": "_allowed",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:22"
            },
            {
              "label": "_cairoToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:26"
            },
            {
              "label": "_cairoTeam",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:27"
            },
            {
              "label": "_cairoReserve",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:28"
            },
            {
              "label": "_cairoTreasury",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:29"
            },
            {
              "label": "_canTransfer",
              "offset": 20,
              "slot": "8",
              "type": "t_bool",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:30"
            },
            {
              "label": "_cairoPerBlock",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:34"
            },
            {
              "label": "_cairoFeeBurnRatio",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:37"
            },
            {
              "label": "_cairoFeeReserveRatio",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:38"
            },
            {
              "label": "_feeRatio",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:39"
            },
            {
              "label": "alpha",
              "offset": 0,
              "slot": "13",
              "type": "t_uint112",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:41"
            },
            {
              "label": "_totalBlockDistribution",
              "offset": 14,
              "slot": "13",
              "type": "t_uint112",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:42"
            },
            {
              "label": "_lastRewardBlock",
              "offset": 28,
              "slot": "13",
              "type": "t_uint32",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:43"
            },
            {
              "label": "_totalBlockReward",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:45"
            },
            {
              "label": "_totalStakingPower",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:46"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(UserInfo)29103_storage)",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:47"
            },
            {
              "label": "_superiorMinCAIRO",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "vCAIROToken",
              "src": "contracts/token/VCairoToken.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)29103_storage)": {
              "label": "mapping(address => struct vCAIROToken.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(UserInfo)29103_storage": {
              "label": "struct vCAIROToken.UserInfo",
              "members": [
                {
                  "label": "stakingPower",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "superiorSP",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "superior",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "credit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "creditDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/farm/PoolFactory.sol:498",
        "version": {
          "withMetadata": "c0587a656683a57d63080321defaefc91fadd8379442cb946a20582660dc4a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm/PoolFactory.sol:680"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/farm/PoolFactory.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBEP20": {
        "src": "contracts/farm/PoolFactory.sol:106",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/farm/PoolFactory.sol:50",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/farm/PoolFactory.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/farm/PoolFactory.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm/PoolFactory.sol:448",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm/PoolFactory.sol:465"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm/PoolFactory.sol:463"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts/farm/PoolFactory.sol:721",
        "version": {
          "withMetadata": "6269884840f7833bef52ac6fa058caa22f4c1992e48b4226ad7b21fcd28b0069",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm/PoolFactory.sol:218",
        "version": {
          "withMetadata": "5e39f62690c5f0dcc66a8f6b343e5061f61d747d4b58596c4e6f16cb4145ce6a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SmartChefFactory": {
        "src": "contracts/farm/PoolFactory.sol:1130",
        "version": {
          "withMetadata": "f0bc30554406d3a003de10139b3b0f22c4b78afd71b7622d84cda3d0001ec73c",
          "withoutMetadata": "9fddfad77324177ae972c6514e66420e0e87c2137f2986b1ff6e6153fe87a21d",
          "linkedWithoutMetadata": "9fddfad77324177ae972c6514e66420e0e87c2137f2986b1ff6e6153fe87a21d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deployPool(address,address,uint256,uint256,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/farm/PoolFactory.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SmartChefInitializable": {
        "src": "contracts/farm/PoolFactory.sol:808",
        "version": {
          "withMetadata": "465ae0aba0cd876d8286148a2e0d815c3a2772eaf10f003d6d2f48d3ab48c11d",
          "withoutMetadata": "008ba60c9f66e4f06c300cc0785079b9ff86386ea8e289a01fc05dad92f1a0b5",
          "linkedWithoutMetadata": "008ba60c9f66e4f06c300cc0785079b9ff86386ea8e289a01fc05dad92f1a0b5"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256,uint256,uint256,address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "emergencyWithdraw()",
          "emergencyRewardWithdraw(uint256)",
          "recoverWrongTokens(address,uint256)",
          "stopReward()",
          "updatePoolLimitPerUser(bool,uint256)",
          "updateRewardPerBlock(uint256)",
          "updateStartAndEndBlocks(uint256,uint256)",
          "pendingReward(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SmartChefInitializable",
            "src": "contracts/farm/PoolFactory.sol:865"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/farm/PoolFactory.sol:51"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm/PoolFactory.sol:463"
            },
            {
              "label": "SMART_CHEF_FACTORY",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:813"
            },
            {
              "label": "hasUserLimit",
              "offset": 20,
              "slot": "2",
              "type": "t_bool",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:816"
            },
            {
              "label": "isInitialized",
              "offset": 21,
              "slot": "2",
              "type": "t_bool",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:819"
            },
            {
              "label": "accTokenPerShare",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:822"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:825"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:828"
            },
            {
              "label": "lastRewardBlock",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:831"
            },
            {
              "label": "poolLimitPerUser",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:834"
            },
            {
              "label": "rewardPerBlock",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:837"
            },
            {
              "label": "PRECISION_FACTOR",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:840"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IBEP20)231",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:843"
            },
            {
              "label": "stakedToken",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IBEP20)231",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:846"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(UserInfo)1177_storage)",
              "contract": "SmartChefInitializable",
              "src": "contracts/farm/PoolFactory.sol:849"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBEP20)231": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)1177_storage)": {
              "label": "mapping(address => struct SmartChefInitializable.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(UserInfo)1177_storage": {
              "label": "struct SmartChefInitializable.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "WBNB": {
        "src": "contracts/token/WBNB.sol:13",
        "version": {
          "withMetadata": "393c2520df4e5d47fbdd066f2fddd3463d1ca9031cd4b701fc2e5a7e592aaf81",
          "withoutMetadata": "e105ee99e9a4cbf84d9322616c2e46024fe5db726a154b9963261154261ee594",
          "linkedWithoutMetadata": "e105ee99e9a4cbf84d9322616c2e46024fe5db726a154b9963261154261ee594"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token/WBNB.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token/WBNB.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/token/WBNB.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts/token/WBNB.sol:14"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts/token/WBNB.sol:15"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WBNB",
              "src": "contracts/token/WBNB.sol:16"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WBNB",
              "src": "contracts/token/WBNB.sol:23"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WBNB",
              "src": "contracts/token/WBNB.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}